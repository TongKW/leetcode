class Solution {
public:
    int hIndex(vector<int>& citations) {
        if (citations[0] >= citations.size()) return citations.size();
        if (citations[citations.size() - 1] == 0) return 0;
        if (citations.size() == 1) return min(1, citations[0]);
        return getHIndex(citations);
    }

    int getHIndex(const vector<int>& v) {
        int left = 0;
        int right = v.size() - 1;

        while (left < right) {
            int mid = left + (right - left) / 2;
            // cout << "Comparing " << v[mid] << " and " << v[mid + 1] << endl;
            // cout << "  " << hValue(v, mid) << " - " << hValue(v, mid + 1) << endl;
            if (hValue(v, mid) - hValue(v, mid + 1) <= 0) {
                left = mid + 1;
            } else {
                right = mid;
            }
        }
        return hValue(v, left);
    }

    int hValue(const vector<int>& v, int i) {
        return min(v[i], (int) v.size() - i);
    }

};

/*
Example 1
{c_i}            = [1,  1,  1,  3,  4,  5,  5,  7,  8, 13, 20]
{len({c_i}) - i} = [11, 10, 9,  8,  7,  6,  5,  4,  3,  2,  1]
{h_i}            = [1,  1,  1,  3,  4,  5,  5,  4,  3,  2,  1]
h_index = 5

Example 2
{c_i}            = [10, 10, 11, 13, 14, 15, 15, 17, 18, 23, 30]
{len({c_i}) - i} = [11, 10, 9,  8,  7,  6,  5,  4,  3,  2,  1]
{h_i}            = [10, 10, 9,  8,  7,  6,  5,  4,  3,  2,  1]
h_index = 10

h-index = max({h_i})
where h_i = min(c_i, len({c_i}) - i)

The problems become:
=> find the maximum number in a discrete convex sequence of integers (h)
=> find the first negative number of h[i+1] - h[i]
*/
